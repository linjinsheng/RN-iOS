{\rtf1\ansi\ansicpg936\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Consolas;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red38\green38\blue38;
\red40\green82\blue135;\red3\green37\blue83;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c20000\c20000\c20000;
\cssrgb\c20000\c40000\c60000;\cssrgb\c0\c20000\c40000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21660\viewh12220\viewkind0
\deftab720
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 openMap(index) \{\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 const \{ pickLat, pickLng, pickUpAddress, receiveLat, receiveLng, receiveAddress \} =\'a0\cf5 \strokec5 this\cf2 \strokec2 .props.model;\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 let slat;\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 let slon;\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 let dlat;\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 let dlon;\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 let sname;\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 let dname =\'a0\cf6 \strokec6 ''\cf2 \strokec2 ;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 if\cf4 \strokec4 \'a0\cf2 \strokec2 (\cf5 \strokec5 this\cf2 \strokec2 .locationType === 1) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 sname =\'a0\cf6 \strokec6 '
\f1 \'ce\'d2\'b5\'c4\'ce\'bb\'d6\'c3
\f0 '\cf2 \strokec2 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dlat = pickLat;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dlon = pickLng;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dname = pickUpAddress;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 if\cf4 \strokec4 \'a0\cf2 \strokec2 (Platform.OS === ANDROID) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 this\cf2 \strokec2 .androidOpenMap(index, sname, dlat, dlon, dname);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 \}\'a0\cf5 \strokec5 else\cf4 \strokec4 \'a0\cf2 \strokec2 \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 Geolocation.getCurrentPosition((location) => \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 if\cf4 \strokec4 \'a0\cf2 \strokec2 (!location) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 ToastUtil.center(\cf6 \strokec6 '
\f1 \'b6\'a8\'ce\'bb\'ca\'a7\'b0\'dc\'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 '\cf2 \strokec2 );\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 return\cf2 \strokec2 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 slat = location.coords.longitude;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 slon = location.coords.latitude;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 RoutePlan.judgeOpenMap(index, slat, slon, sname, dlat, dlon, dname);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 \});\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 \}\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 \}\'a0\cf5 \strokec5 else\cf4 \strokec4 \'a0\cf5 \strokec5 if\cf4 \strokec4 \'a0\cf2 \strokec2 (\cf5 \strokec5 this\cf2 \strokec2 .locationType === 2) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 sname =\'a0\cf6 \strokec6 '
\f1 \'ce\'d2\'b5\'c4\'ce\'bb\'d6\'c3
\f0 '\cf2 \strokec2 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dlat = receiveLat;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dlon = receiveLng;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dname = receiveAddress;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 if\cf4 \strokec4 \'a0\cf2 \strokec2 (Platform.OS === ANDROID) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 this\cf2 \strokec2 .androidOpenMap(index, sname, dlat, dlon, dname);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 \}\'a0\cf5 \strokec5 else\cf4 \strokec4 \'a0\cf2 \strokec2 \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 Geolocation.getCurrentPosition((location) => \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 if\cf4 \strokec4 \'a0\cf2 \strokec2 (!location) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 ToastUtil.center(\cf6 \strokec6 '
\f1 \'b6\'a8\'ce\'bb\'ca\'a7\'b0\'dc\'a3\'ac\'c7\'eb\'d6\'d8\'ca\'d4
\f0 '\cf2 \strokec2 );\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 return\cf2 \strokec2 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 slat = location.coords.longitude;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 slon = location.coords.latitude;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 RoutePlan.judgeOpenMap(index, slat, slon, sname, dlat, dlon, dname);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 \});\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 \}\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 \}\'a0\cf5 \strokec5 else\cf4 \strokec4 \'a0\cf5 \strokec5 if\cf4 \strokec4 \'a0\cf2 \strokec2 (\cf5 \strokec5 this\cf2 \strokec2 .locationType === 3) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 slat = pickLat;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 slon = pickLng;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 sname = pickUpAddress;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dlat = receiveLat;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dlon = receiveLng;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 dname = receiveAddress;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf2 \strokec2 RoutePlan.judgeOpenMap(index, slat, slon, sname, dlat, dlon, dname);\cf4 \strokec4 \
\'a0\'a0\cf2 \strokec2 \}\cf4 \strokec4 \
\cf2 \strokec2 \}\cf4 \strokec4 \
}