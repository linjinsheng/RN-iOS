{\rtf1\ansi\ansicpg936\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Consolas;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red109\green109\blue109;\red255\green255\blue255;\red38\green38\blue38;
\red0\green0\blue0;\red3\green37\blue83;\red15\green114\blue1;\red40\green82\blue135;}
{\*\expandedcolortbl;;\cssrgb\c50196\c50196\c50196;\cssrgb\c100000\c100000\c100000;\cssrgb\c20000\c20000\c20000;
\cssrgb\c0\c0\c0;\cssrgb\c0\c20000\c40000;\cssrgb\c0\c50980\c0;\cssrgb\c20000\c40000\c60000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21660\viewh12220\viewkind0
\deftab720
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #import <Foundation/Foundation.h>\cf4 \strokec4 \
\cf2 \strokec2 #import <UIKit/UIKit.h>\cf4 \strokec4 \
\'a0\
\pard\pardeftab720\sl400\partightenfactor0
\cf5 \strokec5 NS_ASSUME_NONNULL_BEGIN\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 @interface PhotoPicker : NSObject<UIImagePickerControllerDelegate,UINavigationControllerDelegate>\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 -(instancetype)initWithViewController:(UIViewController *)vc;\cf4 \strokec4 \
\cf5 \strokec5 @property(nonatomic,strong)UIViewController *viewController;\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 - (void)selectMethod:(NSInteger)selectTag;\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 - (void)selectMethod:(NSInteger)selectTag maxChoise:(NSInteger)maxChoise;\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 @end\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 NS_ASSUME_NONNULL_END\cf4 \strokec4 \
\'a0\
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \strokec2 #import "PhotoPicker.h"\cf4 \strokec4 \
\cf2 \strokec2 #import <AssetsLibrary/AssetsLibrary.h>\cf4 \strokec4 \
\cf2 \strokec2 #import <BaiduBCEBasic/BaiduBCEBasic.h>\cf4 \strokec4 \
\cf2 \strokec2 #import <BaiduBCEBOS/BaiduBCEBOS.h>\cf4 \strokec4 \
\cf2 \strokec2 #import "WPhotoViewController.h"\cf4 \strokec4 \
\cf2 \strokec2 #import "WHToast.h"\cf4 \strokec4 \
\cf2 \strokec2 #import "ProgressHUD.h"\cf4 \strokec4 \
\'a0\
\pard\pardeftab720\sl400\partightenfactor0
\cf5 \strokec5 NSString *const bucketUrl = @\cf6 \strokec6 "{\field{\*\fldinst{HYPERLINK "https://dashixiong.gz.bcebos.com/"}}{\fldrslt https://dashixiong.gz.bcebos.com}}"\cf5 \strokec5 ;\cf4 \strokec4 \
\cf5 \strokec5 NSString *const bucketName = @\cf6 \strokec6 "dashixiong"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 NSString *const accessKey = @\cf6 \strokec6 "c609b6587c584f109b2583828d2cc934"\cf5 \strokec5 ;\cf4 \strokec4 \
\cf5 \strokec5 NSString *const secretKey = @\cf6 \strokec6 "2e8646779a974e46b8809c80bc1f5c0c"\cf5 \strokec5 ;\cf4 \strokec4 \
\cf5 \strokec5 NSString *const versionString = @\cf6 \strokec6 "/v1/"\cf5 \strokec5 ;\cf4 \strokec4 \
\cf5 \strokec5 NSString *const separatorString = @\cf6 \strokec6 "/"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 @interface PhotoPicker ()\cf4 \strokec4 \
\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 BOSClient *client;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSMutableArray *_photosArr;\cf4 \strokec4 \
\cf5 \strokec5 \}\cf4 \strokec4 \
\cf5 \strokec5 @property (nonatomic, strong) NSMutableArray *myArray;\'a0\'a0\'a0\cf7 \strokec7 //
\f1 \'cb\'f9\'b9\'d8\'d7\'a2\'c1\'ec\'d3\'f2
\f0 Id
\f1 \'d7\'d6\'b7\'fb\'ca\'fd\'d7\'e9
\f0 \cf4 \strokec4 \
\'a0\
\'a0\
\cf5 \strokec5 @end\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 @implementation PhotoPicker\cf4 \strokec4 \
\'a0\
\pard\pardeftab720\sl400\partightenfactor0
\cf7 \strokec7 //
\f1 \'d1\'a1\'d6\'d0\'b9\'d8\'d7\'a2\'c1\'ec\'d3\'f2
\f0 Id
\f1 \'ca\'fd\'d7\'e9
\f0 \cf4 \strokec4 \
\pard\pardeftab720\sl400\partightenfactor0
\cf5 \strokec5 - (NSMutableArray *)myArray\cf4 \strokec4 \
\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (_myArray == nil)\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 _myArray = [NSMutableArray array];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\cf8 \strokec8 return\cf4 \strokec4 \'a0\cf5 \strokec5 _myArray;\cf4 \strokec4 \
\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\
\'a0\
\cf5 \strokec5 -(instancetype)initWithViewController:(UIViewController *)vc\{\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 self=[\cf8 \strokec8 super\cf4 \strokec4 \'a0\cf5 \strokec5 init];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 self.viewController=vc;\cf4 \strokec4 \
\'a0\'a0\cf8 \strokec8 return\cf4 \strokec4 \'a0\cf5 \strokec5 self;\cf4 \strokec4 \
\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 - (void)selectMethod:(NSInteger)selectTag\{\cf4 \strokec4 \
\'a0\'a0\cf7 \strokec7 // selectTag 0
\f1 \'a1\'a2\'c5\'c4\'d5\'d5
\f0  1
\f1 \'a1\'a2\'cf\'e0\'b2\'e1\'b5\'a5\'d1\'a1
\f0  2
\f1 \'a1\'a2\'cf\'e0\'b2\'e1\'b6\'e0\'d1\'a1
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 _myArray = [[NSMutableArray alloc]init];\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf7 \strokec7 //
\f1 \'d0\'c2\'bd\'a8
\f0 BosClient\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 BCECredentials* credentials = [[BCECredentials alloc] init];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 credentials.accessKey = accessKey;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 credentials.secretKey = secretKey;\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 BOSClientConfiguration* configuration = [[BOSClientConfiguration alloc] init];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 configuration.endpoint = bucketUrl;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 configuration.credentials = credentials;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 client = [[BOSClient alloc] initWithConfiguration:configuration];\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf7 \strokec7 //
\f1 \'d0\'c2\'bd\'a8
\f0 Bucket\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 BCETask* task = [client putBucket:bucketName];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 task.then(^(BCEOutput* output) \{\'a0\cf7 \strokec7 // 
\f1 \'c8\'ce\'ce\'f1\'bf\'c9\'d2\'d4\'d2\'ec\'b2\'bd\'d6\'b4\'d0\'d0\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.response) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'b3\'c9\'b9\'a6\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "Bucket
\f1 \'d6\'b4\'d0\'d0\'b3\'c9\'b9\'a6\'c3\'e8\'ca\'f6
\f0 %@"\cf5 \strokec5 , output.response);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.error) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'ca\'a7\'b0\'dc\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "Bucket
\f1 \'d6\'b4\'d0\'d0\'ca\'a7\'b0\'dc\'c3\'e8\'ca\'f6
\f0 %@"\cf5 \strokec5 , output.error);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.progress) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'bd\'f8\'b6\'c8\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "Bucket
\f1 \'d6\'b4\'d0\'d0\'bd\'f8\'b6\'c8\'c3\'e8\'ca\'f6
\f0 %@"\cf5 \strokec5 , output.progress);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \});\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 [task waitUtilFinished];\'a0\cf7 \strokec7 // 
\f1 \'bf\'c9\'d2\'d4\'cd\'ac\'b2\'bd\'b7\'bd\'ca\'bd\'a3\'ac\'b5\'c8\'b4\'fd\'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'cd\'ea\'b1\'cf\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf8 \strokec8 if\cf5 \strokec5 (selectTag != 2)\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 imagePicker.delegate = self;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 imagePicker.allowsEditing = YES;\'a0\cf7 \strokec7 //
\f1 \'d4\'ca\'d0\'ed\'b1\'e0\'bc\'ad
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf5 \strokec5 (selectTag == 0)\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 //
\f1 \'c5\'c4\'d5\'d5
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 BOOL isCamera = [UIImagePickerController isCameraDeviceAvailable:UIImagePickerControllerCameraDeviceFront|\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 UIImagePickerControllerCameraDeviceRear];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (!isCamera) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "
\f1 \'c3\'bb\'d3\'d0\'cf\'e0\'bb\'fa
\f0 "\cf5 \strokec5 );\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 //\'a0\'a0\'a0\'a0\'a0 [Tools showTipsWithHUD:@"
\f1 \'c3\'bb\'d3\'d0\'c9\'e3\'cf\'f1\'cd\'b7
\f0 " showTime:1.0f];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 return\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;\'a0\'a0\cf7 \strokec7 //
\f1 \'c9\'e3\'cf\'f1\'cd\'b7
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf8 \strokec8 else\cf4 \strokec4 \'a0\cf8 \strokec8 if\cf5 \strokec5 (selectTag == 1)\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 //
\f1 \'b4\'d3\'cf\'e0\'b2\'e1\'d6\'d0\'d1\'a1\'d4\'f1
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 imagePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;\'a0\cf7 \strokec7 //
\f1 \'cf\'e0\'b2\'e1
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf5 \strokec5 UIViewController *topRootViewController = [[UIApplication\'a0 sharedApplication] keyWindow].rootViewController;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'d4\'da\'d5\'e2\'c0\'ef\'bc\'d3\'d2\'bb\'b8\'f6\'d5\'e2\'b8\'f6\'d1\'f9\'ca\'bd\'b5\'c4\'d1\'ad\'bb\'b7
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 while\cf4 \strokec4 \'a0\cf5 \strokec5 (topRootViewController.presentedViewController)\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'d5\'e2\'c0\'ef\'b9\'cc\'b6\'a8\'d0\'b4\'b7\'a8
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 topRootViewController = topRootViewController.presentedViewController;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'c8\'bb\'ba\'f3\'d4\'d9\'bd\'f8\'d0\'d0
\f0 present
\f1 \'b2\'d9\'d7\'f7
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 [topRootViewController presentViewController:imagePicker animated:YES completion:nil];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 - (void)selectMethod:(NSInteger)selectTag maxChoise:(NSInteger)maxChoise\{\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "
\f1 \'b5\'b1\'c7\'b0\'d1\'a1\'d6\'d0
\f0 selectTag%ld"\cf5 \strokec5 , selectTag);\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "
\f1 \'b5\'b1\'c7\'b0\'d1\'a1\'d6\'d0
\f0 maxChoise%ld"\cf5 \strokec5 , maxChoise);\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf7 \strokec7 //
\f1 \'d0\'c2\'bd\'a8
\f0 BosClient\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 BCECredentials* credentials = [[BCECredentials alloc] init];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 credentials.accessKey = accessKey;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 credentials.secretKey = secretKey;\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 BOSClientConfiguration* configuration = [[BOSClientConfiguration alloc] init];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 configuration.endpoint = bucketUrl;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 configuration.credentials = credentials;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 client = [[BOSClient alloc] initWithConfiguration:configuration];\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf7 \strokec7 //
\f1 \'d0\'c2\'bd\'a8
\f0 Bucket\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 BCETask* task = [client putBucket:bucketName];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 task.then(^(BCEOutput* output) \{\'a0\cf7 \strokec7 // 
\f1 \'c8\'ce\'ce\'f1\'bf\'c9\'d2\'d4\'d2\'ec\'b2\'bd\'d6\'b4\'d0\'d0\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.response) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'b3\'c9\'b9\'a6\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "Bucket
\f1 \'d6\'b4\'d0\'d0\'b3\'c9\'b9\'a6\'c3\'e8\'ca\'f6
\f0 %@"\cf5 \strokec5 , output.response);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.error) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'ca\'a7\'b0\'dc\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "Bucket
\f1 \'d6\'b4\'d0\'d0\'ca\'a7\'b0\'dc\'c3\'e8\'ca\'f6
\f0 %@"\cf5 \strokec5 , output.error);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.progress) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'bd\'f8\'b6\'c8\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "Bucket
\f1 \'d6\'b4\'d0\'d0\'bd\'f8\'b6\'c8\'c3\'e8\'ca\'f6
\f0 %@"\cf5 \strokec5 , output.progress);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \});\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 [task waitUtilFinished];\'a0\cf7 \strokec7 // 
\f1 \'bf\'c9\'d2\'d4\'cd\'ac\'b2\'bd\'b7\'bd\'ca\'bd\'a3\'ac\'b5\'c8\'b4\'fd\'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'cd\'ea\'b1\'cf\'a1\'a3
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 _myArray = [[NSMutableArray alloc]init];\cf4 \strokec4 \
\'a0\'a0\cf8 \strokec8 if\cf5 \strokec5 (selectTag ==2)\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 WPhotoViewController *WphotoVC = [[WPhotoViewController alloc] init];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf7 \strokec7 //
\f1 \'d1\'a1\'d4\'f1\'cd\'bc\'c6\'ac\'b5\'c4\'d7\'ee\'b4\'f3\'ca\'fd
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 WphotoVC.selectPhotoOfMax = maxChoise;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 [WphotoVC setSelectPhotosBack:^(NSMutableArray *phostsArr) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 _photosArr = phostsArr;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "
\f1 \'cb\'f9\'d1\'a1\'d4\'f1\'b5\'c4\'cd\'bc\'c6\'ac
\f0 _photosArr
\f1 \'ce\'aa
\f0 %@"\cf5 \strokec5 ,_photosArr);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf5 \strokec5 (phostsArr.count > 0)\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 for\cf4 \strokec4 \'a0\cf5 \strokec5 (int i = 0;i<phostsArr.count;i++)\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "
\f1 \'cb\'f9\'d1\'a1\'d4\'f1\'b5\'c4\'cd\'bc\'c6\'ac
\f0 _photosArr[%ld]
\f1 \'ce\'aa
\f0 %@"\cf5 \strokec5 ,i,_photosArr[i]);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 UIImage *pickerImage = [_photosArr[i] objectForKey:@\cf6 \strokec6 "image"\cf5 \strokec5 ];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "
\f1 \'cb\'f9\'d1\'a1\'d4\'f1\'b5\'c4\'cd\'bc\'c6\'ac
\f0 pickerImage
\f1 \'ce\'aa
\f0 %@"\cf5 \strokec5 ,pickerImage);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSData *data;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSString *houzhui;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 //
\f1 \'c5\'d0\'b6\'cf\'ca\'c7
\f0 png 
\f1 \'bb\'b9\'ca\'c7
\f0  jpg
\f1 \'cd\'bc\'c6\'ac
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (UIImagePNGRepresentation(pickerImage)) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 houzhui = @\cf6 \strokec6 ".png"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 data = UIImagePNGRepresentation(pickerImage);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf8 \strokec8 else\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 houzhui = @\cf6 \strokec6 ".jpg"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 data = UIImageJPEGRepresentation(pickerImage, 1.0);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSArray *paths = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSString *documentsDirectory = [paths objectAtIndex:0];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSString *fileD = [documentsDirectory stringByAppendingPathComponent:\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 [NSString stringWithFormat:@\cf6 \strokec6 "user%@"\cf5 \strokec5 ,houzhui]];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSFileManager *manager = [NSFileManager defaultManager];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 ([manager isExecutableFileAtPath:fileD] ==\'a0\cf8 \strokec8 false\cf5 \strokec5 ) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 //
\f1 \'b0\'d1\'cd\'bc\'c6\'ac
\f0 nsdata
\f1 \'d0\'b4\'c8\'eb\'ce\'c4\'bc\'fe
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 [data writeToFile:fileD atomically:YES];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \});\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 BOSObjectContent* content = [[BOSObjectContent alloc] init];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'d2\'d4\'b6\'fe\'bd\'f8\'d6\'c6\'ca\'fd\'be\'dd\'b7\'bd\'ca\'bd
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 content.objectData.data = data;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSString *uuidString = [[NSUUID UUID] UUIDString];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "uuid
\f1 \'b5\'c4\'d6\'b5\'ce\'aa
\f0 %@"\cf5 \strokec5 , uuidString);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSString *contentType = @\cf6 \strokec6 "image/png"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf5 \strokec5 ([houzhui isEqual: @\cf6 \strokec6 ".png"\cf5 \strokec5 ])\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 contentType = @\cf6 \strokec6 "image/png"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf8 \strokec8 else\cf4 \strokec4 \'a0\cf8 \strokec8 if\cf5 \strokec5 ([houzhui isEqual: @\cf6 \strokec6 ".jpg"\cf5 \strokec5 ])\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 contentType = @\cf6 \strokec6 "image/jpeg"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 BOSObjectMetadata* metadata = [[BOSObjectMetadata alloc] init];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 metadata.contentType = contentType;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 content.metadata = metadata;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSString *picName = [NSString stringWithFormat:@\cf6 \strokec6 "%@%@"\cf5 \strokec5 , uuidString,houzhui];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "picName
\f1 \'ce\'aa
\f0 %@"\cf5 \strokec5 , picName);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 BOSPutObjectRequest* request = [[BOSPutObjectRequest alloc] init];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 request.bucket = bucketName;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 request.key = picName;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 request.objectContent = content;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 __block BOSPutObjectResponse* response = nil;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 BCETask* taskTwo = [client putObject:request];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSString *picUrl =[NSString stringWithFormat:@\cf6 \strokec6 "%@%@%@%@%@"\cf5 \strokec5 , bucketUrl, versionString,bucketName,separatorString,picName];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 taskTwo.then(^(BCEOutput* output) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.progress) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "put object progress is %@"\cf5 \strokec5 , output.progress);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.response) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 response = (BOSPutObjectResponse*)output.response;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "put object success!"\cf5 \strokec5 );\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 [_myArray addObject:picUrl];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "_myArray
\f1 \'ce\'aa
\f0 %@"\cf5 \strokec5 , _myArray);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "_myArray
\f1 \'b5\'c4\'ca\'fd\'c4\'bf\'ce\'aa
\f0 %ld"\cf5 \strokec5 , _myArray.count);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.error) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "put object failure"\cf5 \strokec5 );\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \});\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 [taskTwo waitUtilFinished];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf5 \strokec5 (_myArray.count > 0)\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSString *picUrl = [_myArray componentsJoinedByString:@\cf6 \strokec6 ";"\cf5 \strokec5 ];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "picUrl
\f1 \'ce\'aa
\f0 %@"\cf5 \strokec5 , picUrl);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 [[NSNotificationCenter defaultCenter] postNotificationName:@\cf6 \strokec6 "sendCustomEventNotification"\cf4 \strokec4 \'a0\cf5 \strokec5 object:nil userInfo:@\{@\cf6 \strokec6 "picUrl"\cf5 \strokec5 :picUrl\}];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 UIViewController *topRootViewController = [[UIApplication\'a0 sharedApplication] keyWindow].rootViewController;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'d4\'da\'d5\'e2\'c0\'ef\'bc\'d3\'d2\'bb\'b8\'f6\'d5\'e2\'b8\'f6\'d1\'f9\'ca\'bd\'b5\'c4\'d1\'ad\'bb\'b7
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 while\cf4 \strokec4 \'a0\cf5 \strokec5 (topRootViewController.presentedViewController)\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // 
\f1 \'d5\'e2\'c0\'ef\'b9\'cc\'b6\'a8\'d0\'b4\'b7\'a8
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 topRootViewController = topRootViewController.presentedViewController;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf5 \strokec5 [topRootViewController presentViewController:WphotoVC animated:YES completion:nil];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\
\'a0\
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \strokec2 #pragma mark -- 
\f1 \'c8\'a1\'cf\'fb\'cf\'e0\'b2\'e1
\f0 \cf4 \strokec4 \
\pard\pardeftab720\sl400\partightenfactor0
\cf5 \strokec5 - (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker\cf4 \strokec4 \
\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 [picker dismissViewControllerAnimated:YES completion:nil];\cf4 \strokec4 \
\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \strokec2 #pragma mark -- UIImagePickerController delegate\cf4 \strokec4 \
\pard\pardeftab720\sl400\partightenfactor0
\cf5 \strokec5 - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info\cf4 \strokec4 \
\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 UIImage *pickerImage = [info objectForKey:UIImagePickerControllerEditedImage];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "before--%@"\cf5 \strokec5 ,pickerImage);\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "before--%f----%f"\cf5 \strokec5 ,pickerImage.size.height,pickerImage.size.width);\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 UIGraphicsBeginImageContext(CGSizeMake(200, 200));\cf7 \strokec7 //
\f1 \'bb\'e6\'d6\'c6\'cd\'bc\'c6\'ac\'b4\'f3\'d0\'a1
\f0 \cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 [pickerImage drawInRect:CGRectMake(0, 0, 200, 200)];\'a0\cf7 \strokec7 //
\f1 \'b4\'d3\'b5\'b1\'c7\'b0
\f0 context
\f1 \'d6\'d0\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'b8\'c4\'b1\'e4\'b4\'f3\'d0\'a1\'ba\'f3\'b5\'c4\'cd\'bc
\f0 \cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 pickerImage = UIGraphicsGetImageFromCurrentImageContext();\'a0\cf7 \strokec7 //
\f1 \'ca\'b9\'b5\'b1\'c7\'b0
\f0 context
\f1 \'b3\'f6\'b6\'d1\'d5\'bb
\f0 \cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 UIGraphicsEndImageContext();\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "after--%f----%f"\cf5 \strokec5 ,pickerImage.size.height,pickerImage.size.width);\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 NSData *data;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSString *houzhui;\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf7 \strokec7 //
\f1 \'c5\'d0\'b6\'cf\'ca\'c7
\f0 png 
\f1 \'bb\'b9\'ca\'c7
\f0  jpg
\f1 \'cd\'bc\'c6\'ac
\f0 \cf4 \strokec4 \
\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (UIImagePNGRepresentation(pickerImage)) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 houzhui = @\cf6 \strokec6 ".png"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 data = UIImagePNGRepresentation(pickerImage);\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \}\cf8 \strokec8 else\cf5 \strokec5 \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 houzhui = @\cf6 \strokec6 ".jpg"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 data = UIImageJPEGRepresentation(pickerImage, 1.0);\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 NSArray *paths = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES);\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSString *documentsDirectory = [paths objectAtIndex:0];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSString *fileD = [documentsDirectory stringByAppendingPathComponent:\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 [NSString stringWithFormat:@\cf6 \strokec6 "user%@"\cf5 \strokec5 ,houzhui]];\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 NSFileManager *manager = [NSFileManager defaultManager];\cf4 \strokec4 \
\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 ([manager isExecutableFileAtPath:fileD] ==\'a0\cf8 \strokec8 false\cf5 \strokec5 ) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf7 \strokec7 //
\f1 \'b0\'d1\'cd\'bc\'c6\'ac
\f0 nsdata
\f1 \'d0\'b4\'c8\'eb\'ce\'c4\'bc\'fe
\f0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 [data writeToFile:fileD atomically:YES];\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \});\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 BOSObjectContent* content = [[BOSObjectContent alloc] init];\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf7 \strokec7 // 
\f1 \'d2\'d4\'b6\'fe\'bd\'f8\'d6\'c6\'ca\'fd\'be\'dd\'b7\'bd\'ca\'bd
\f0 \cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 content.objectData.data = data;\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 NSString *uuidString = [[NSUUID UUID] UUIDString];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "uuid
\f1 \'b5\'c4\'d6\'b5\'ce\'aa
\f0 %@"\cf5 \strokec5 , uuidString);\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 NSString *contentType = @\cf6 \strokec6 "image/png"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\cf8 \strokec8 if\cf5 \strokec5 ([houzhui isEqual: @\cf6 \strokec6 ".png"\cf5 \strokec5 ])\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 contentType = @\cf6 \strokec6 "image/png"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \}\cf8 \strokec8 else\cf4 \strokec4 \'a0\cf8 \strokec8 if\cf5 \strokec5 ([houzhui isEqual: @\cf6 \strokec6 ".jpg"\cf5 \strokec5 ])\{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 contentType = @\cf6 \strokec6 "image/jpeg"\cf5 \strokec5 ;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 BOSObjectMetadata* metadata = [[BOSObjectMetadata alloc] init];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 metadata.contentType = contentType;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 content.metadata = metadata;\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 NSString *picName = [NSString stringWithFormat:@\cf6 \strokec6 "%@%@"\cf5 \strokec5 , uuidString,houzhui];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "picName
\f1 \'ce\'aa
\f0 %@"\cf5 \strokec5 , picName);\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 BOSPutObjectRequest* request = [[BOSPutObjectRequest alloc] init];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 request.bucket = bucketName;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 request.key = picName;\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 request.objectContent = content;\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 __block BOSPutObjectResponse* response = nil;\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 BCETask* taskTwo = [client putObject:request];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 taskTwo.then(^(BCEOutput* output) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.progress) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "put object progress is %@"\cf5 \strokec5 , output.progress);\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.response) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 response = (BOSPutObjectResponse*)output.response;\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "put object success!"\cf5 \strokec5 );\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf8 \strokec8 if\cf4 \strokec4 \'a0\cf5 \strokec5 (output.error) \{\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "put object failure"\cf5 \strokec5 );\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \});\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 [taskTwo waitUtilFinished];\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 NSString *picUrl =[NSString stringWithFormat:@\cf6 \strokec6 "%@%@%@%@%@"\cf5 \strokec5 , bucketUrl, versionString,bucketName,separatorString,picName];\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "picUrl
\f1 \'ce\'aa
\f0 %@"\cf5 \strokec5 ,picUrl);\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf7 \strokec7 //
\f1 \'c9\'cf\'b4\'ab\'b5\'bd\'b0\'d9\'b6\'c8\'d4\'c6\'b4\'e6\'b4\'a2
\f0 ,
\f1 \'d0\'e8\'d2\'aa\'b7\'a2\'b3\'f6\'d2\'bb\'b8\'f6\'cd\'a8\'d6\'aa
\f0 \cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 [[NSNotificationCenter defaultCenter] postNotificationName:@\cf6 \strokec6 "sendCustomEventNotification"\cf4 \strokec4 \'a0\cf5 \strokec5 object:nil userInfo:@\{@\cf6 \strokec6 "picUrl"\cf5 \strokec5 :picUrl\}];\cf4 \strokec4 \
\'a0\'a0\'a0\
\'a0\'a0\cf5 \strokec5 [picker dismissViewControllerAnimated:YES completion:^\{\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 NSLog(@\cf6 \strokec6 "imagePicker
\f1 \'cd\'cb\'b3\'f6
\f0 "\cf5 \strokec5 );\cf4 \strokec4 \
\'a0\'a0\cf5 \strokec5 \}];\cf4 \strokec4 \
\'a0\'a0\'a0\
\cf5 \strokec5 \}\cf4 \strokec4 \
\'a0\
\cf5 \strokec5 @end\cf4 \strokec4 \
}